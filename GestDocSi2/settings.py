"""
Django settings for GestDocSi2 project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import environ, os
from pathlib import Path
from datetime import timedelta


BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(DEBUG=(bool, False))
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY", default="change-me")   # nunca dejes una real aquí
DEBUG = env.bool("DEBUG", default=False)
ALLOWED_HOSTS = [h.strip() for h in env("ALLOWED_HOSTS", default="127.0.0.1,localhost,testserver").split(",")]


# Application definition

# Apps
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    

    'seguridad',
    'actores',
    'documentos',
    'casos',
    'portal',
    'dashboard',
    'accounts',
    'chat',
    'whitenoise.runserver_nostatic',
    'rest_framework',
    'django_filters',

    'corsheaders',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
]

#CSRF_COOKIE_SECURE = True  # Solo si estás usando HTTPS
#CSRF_COOKIE_HTTPONLY = True
AUTH_USER_MODEL = 'seguridad.Usuario'

MIDDLEWARE = [
     'corsheaders.middleware.CorsMiddleware',  # Debe ir lo más arriba posible!
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # Para servir estáticos en producción

    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "GestDocSi2.urls"
CORS_ALLOW_ALL_ORIGINS = True
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],  # carpeta global
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8000',  # Asegúrate de que tu frontend está incluido aquí
    'https://c270a31038e7.ngrok-free.app',  # Si usas HTTPS en producción
]
WSGI_APPLICATION = "GestDocSi2.wsgi.application"
ASGI_APPLICATION = "GestDocSi2.asgi.application"

# Base de datos: PostgreSQL desde .env 
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": env("DB_NAME"),
        "USER": env("DB_USER"),
        "PASSWORD": env("DB_PASSWORD"),
        "HOST": env("DB_HOST", default="127.0.0.1"),
        "PORT": env("DB_PORT", default="5432"),
    }
}
# --- JWT (JSON Web Token) Configuration ---
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(weeks=5),   # Ejemplo: 5 semanas (considera si es apropiado para tu caso)
    'REFRESH_TOKEN_LIFETIME': timedelta(weeks=7),     # Ejemplo: 7 semanas (considera si es apropiado para tu caso)

    # Si se rota el refresh token, generar uno nuevo y descartar el anterior
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,

    # Cabecera esperada: "Authorization: Bearer <token>"
    'AUTH_HEADER_TYPES': ('Bearer',),

    # Solo se aceptan AccessTokens para autenticación
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
}
# --- Django REST Framework Configuration ---
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated', # Por defecto, requiere autenticación
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',  # Habilitar filtrado
    ),
}


# Idioma y zona
LANGUAGE_CODE = env("LANGUAGE_CODE", default="es")
TIME_ZONE = env("TIME_ZONE", default="America/La_Paz")
USE_I18N = True
USE_TZ = True

# Archivos estáticos y media
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
#STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / "static"]

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Redirecciones después de login/logout
LOGIN_REDIRECT_URL = 'dashboard:panel'   
LOGOUT_REDIRECT_URL = 'home'
# En tu archivo settings.p

CSRF_COOKIE_NAME = "csrftoken"
CSRF_COOKIE_SECURE = False 