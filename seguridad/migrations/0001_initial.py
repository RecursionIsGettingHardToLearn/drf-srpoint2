# Generated by Django 5.2.7 on 2025-10-11 13:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permiso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=150)),
                ('accion', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('estado', models.CharField(default='ACTIVO', max_length=20)),
                ('estadoCuenta', models.CharField(default='HABILITADA', max_length=20)),
                ('creadoEn', models.DateTimeField(auto_now_add=True)),
                ('actualizadoEn', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bitacora',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=100)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('userAgent', models.TextField(blank=True)),
                ('fecha', models.DateTimeField()),
                ('login_at', models.DateTimeField(blank=True, null=True)),
                ('logout_at', models.DateTimeField(blank=True, null=True)),
                ('device', models.CharField(blank=True, max_length=255, null=True)),
                ('idUsuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bitacoras', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bitacora',
            },
        ),
        migrations.CreateModel(
            name='DetalleBitacora',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accion', models.CharField(max_length=100)),
                ('fecha', models.DateTimeField()),
                ('tabla', models.CharField(max_length=100)),
                ('detalle', models.TextField(blank=True)),
                ('idBitacora', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='seguridad.bitacora')),
            ],
            options={
                'db_table': 'detallebitacora',
            },
        ),
        migrations.CreateModel(
            name='RolPermiso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(default='ACTIVO', max_length=20)),
                ('permiso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seguridad.permiso')),
                ('rol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seguridad.rol')),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioRol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaAsignacion', models.DateField()),
                ('rol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seguridad.rol')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='bitacora',
            index=models.Index(fields=['idUsuario', 'fecha'], name='bitacora_idUsuar_f7f3ad_idx'),
        ),
        migrations.AddIndex(
            model_name='bitacora',
            index=models.Index(fields=['login', 'fecha'], name='bitacora_login_6c16e9_idx'),
        ),
        migrations.AddIndex(
            model_name='detallebitacora',
            index=models.Index(fields=['tabla', 'fecha'], name='detallebita_tabla_5de9e5_idx'),
        ),
        migrations.AddIndex(
            model_name='detallebitacora',
            index=models.Index(fields=['accion', 'fecha'], name='detallebita_accion_476bc7_idx'),
        ),
        migrations.AddIndex(
            model_name='rolpermiso',
            index=models.Index(fields=['rol', 'permiso'], name='seguridad_r_rol_id_a10a3d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rolpermiso',
            unique_together={('rol', 'permiso')},
        ),
        migrations.AddIndex(
            model_name='usuariorol',
            index=models.Index(fields=['usuario', 'rol'], name='seguridad_u_usuario_ef0095_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usuariorol',
            unique_together={('usuario', 'rol')},
        ),
    ]
